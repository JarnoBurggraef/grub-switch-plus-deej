#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /usr/local/etc/grub.d and settings from /usr/local/etc/default/grub
#

### BEGIN /usr/local/etc/grub.d/00_grubswitch ###
echo "Hey local dude from 01_custom, with no tail"
### END /usr/local/etc/grub.d/00_grubswitch ###

### BEGIN /usr/local/etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_msdos
insmod ext2
set root='hd0,msdos1'
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
else
  search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
fi
    font="/boot/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_output gfxterm
if [ x$feature_timeout_style = xy ] ; then
  set timeout_style=menu
  set timeout=5
# Fallback normal timeout code in case the timeout_style feature is
# unavailable.
else
  set timeout=5
fi
### END /usr/local/etc/grub.d/00_header ###

### BEGIN /usr/local/etc/grub.d/10_linux ###
menuentry 'GNU/Linux' --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b' {
	load_video
	set gfxpayload=keep
	insmod gzio
	insmod part_msdos
	insmod ext2
	set root='hd0,msdos1'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
	else
	  search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
	fi
	echo	'Loading Linux 5.0.0-36-generic ...'
	linux	/boot/vmlinuz-5.0.0-36-generic root=UUID=05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b ro  
	echo	'Loading initial ramdisk ...'
	initrd	/boot/initrd.img-5.0.0-36-generic
}
submenu 'Advanced options for GNU/Linux' $menuentry_id_option 'gnulinux-advanced-05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b' {
	menuentry 'GNU/Linux, with Linux 5.0.0-36-generic' --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.0.0-36-generic-advanced-05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b' {
		load_video
		set gfxpayload=keep
		insmod gzio
		insmod part_msdos
		insmod ext2
		set root='hd0,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		else
		  search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		fi
		echo	'Loading Linux 5.0.0-36-generic ...'
		linux	/boot/vmlinuz-5.0.0-36-generic root=UUID=05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b ro  
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-5.0.0-36-generic
	}
	menuentry 'GNU/Linux, with Linux 5.0.0-36-generic (recovery mode)' --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.0.0-36-generic-recovery-05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b' {
		load_video
		set gfxpayload=keep
		insmod gzio
		insmod part_msdos
		insmod ext2
		set root='hd0,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		else
		  search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		fi
		echo	'Loading Linux 5.0.0-36-generic ...'
		linux	/boot/vmlinuz-5.0.0-36-generic root=UUID=05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b ro single 
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-5.0.0-36-generic
	}
	menuentry 'GNU/Linux, with Linux 5.0.0-32-generic' --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.0.0-32-generic-advanced-05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b' {
		load_video
		set gfxpayload=keep
		insmod gzio
		insmod part_msdos
		insmod ext2
		set root='hd0,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		else
		  search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		fi
		echo	'Loading Linux 5.0.0-32-generic ...'
		linux	/boot/vmlinuz-5.0.0-32-generic root=UUID=05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b ro  
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-5.0.0-32-generic
	}
	menuentry 'GNU/Linux, with Linux 5.0.0-32-generic (recovery mode)' --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.0.0-32-generic-recovery-05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b' {
		load_video
		set gfxpayload=keep
		insmod gzio
		insmod part_msdos
		insmod ext2
		set root='hd0,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		else
		  search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
		fi
		echo	'Loading Linux 5.0.0-32-generic ...'
		linux	/boot/vmlinuz-5.0.0-32-generic root=UUID=05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b ro single 
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-5.0.0-32-generic
	}
}

### END /usr/local/etc/grub.d/10_linux ###

### BEGIN /usr/local/etc/grub.d/20_linux_xen ###

### END /usr/local/etc/grub.d/20_linux_xen ###

### BEGIN /usr/local/etc/grub.d/30_os-prober ###
### END /usr/local/etc/grub.d/30_os-prober ###

### BEGIN /usr/local/etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
echo "Hey local dude"

### END /usr/local/etc/grub.d/40_custom ###

### BEGIN /usr/local/etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /usr/local/etc/grub.d/41_custom ###

### BEGIN /usr/local/etc/grub.d/42_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
echo "Hey local dude from 42_custom"

### END /usr/local/etc/grub.d/42_custom ###

### BEGIN /usr/local/etc/grub.d/90_memtest86 ###
# Include Memtest86 in the menu

menuentry 'Memtest86 (64-Bit)' --class memtest {
	 insmod part_gpt
	 insmod fat
	 search --no-floppy --fs-uuid --set=root 05b0d31c-6ff1-4ccc-acb5-1f4aa57f739b
	 loopback loopmemtest /boot/memtest86/memtest86-usb.img
	 chainloader (loopmemtest,1)/EFI/BOOT/BOOTX64.efi
}
### END /usr/local/etc/grub.d/90_memtest86 ###

### BEGIN /usr/local/etc/grub.d/99_grub_switch ###
### FINDING, HASH-CHECKING AND EXECUTING 'SWITCH.GRB' FILE ###

## Try to find SWITCH.GRB file in drives
## extend for loop numbers if your system might have
## more drives, including plugged-in USB drives
SWITCH_GRB_FOLDER=
for i in 0 1 2 3 4 5 6 7 8 9
do
	if [ -e (hd${i})/SWITCH.GRB ]
	then	SWITCH_GRB_FOLDER="(hd${i})"
	fi

	if [ -e (hd${i},1)/SWITCH.GRB ]
	then	SWITCH_GRB_FOLDER="(hd${i},1)"
	fi
done

## check SWITCH.GRB against hashes
if [ -n "${SWITCH_GRB_FOLDER}" ]
then
	MATCHED=true		## if the hashes folder does not exist, don't check
	if [ -e ${prefix}/grub_switch_hashes ]
	then
		echo "Found hash folder. Continuing..."
		MATCHED=false
		for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
		do
			filename=${prefix}/grub_switch_hashes/${i}.sha512
			if [ -e $filename ]
			then
				echo -n "checking against hash #${i}: "
				if sha512sum  --check ${filename} --prefix ${SWITCH_GRB_FOLDER}
				then
					MATCHED=true
				fi
			fi
		done
		if [ false = $MATCHED ]
		then
			echo "SWITCH.GRB didn't match any of the stored hashes and won't be run."
			sleep 5
		fi
	else
		echo "Didn't find hash folder."
	fi
else
	MATCHED=false		## if SWITCH.GRB not found, don't execute either
fi


## execute SWITCH.GRB file if it exists and hashes checked out (or no hashes present)
if [ true = $MATCHED ]
then
	source ${SWITCH_GRB_FOLDER}/SWITCH.GRB
fi
### END /usr/local/etc/grub.d/99_grub_switch ###
